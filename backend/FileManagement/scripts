IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [FolderProcessStates] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(100) NOT NULL,
    [Description] nvarchar(500) NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NOT NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_FolderProcessStates] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [Folders] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(500) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    [ParentFolderId] int NULL,
    [Status] BIT NOT NULL DEFAULT CAST(1 AS BIT),
    [HasProcessState] bit NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NOT NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_Folders] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Folders_Folders_ParentFolderId] FOREIGN KEY ([ParentFolderId]) REFERENCES [Folders] ([Id]) ON DELETE NO ACTION
);
GO

CREATE TABLE [Modules] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(100) NOT NULL,
    [Description] nvarchar(500) NOT NULL,
    [ParentModuleId] int NULL,
    [UrlPath] nvarchar(200) NULL,
    [Icon] nvarchar(200) NULL,
    [Order] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NOT NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_Modules] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Modules_Modules_ParentModuleId] FOREIGN KEY ([ParentModuleId]) REFERENCES [Modules] ([Id]) ON DELETE NO ACTION
);
GO

CREATE TABLE [Roles] (
    [Id] int NOT NULL IDENTITY,
    [RoleName] nvarchar(100) NOT NULL,
    [Description] nvarchar(500) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NOT NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_Roles] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [SourceProviders] (
    [Id] int NOT NULL IDENTITY,
    [ProviderName] nvarchar(100) NOT NULL,
    [Description] nvarchar(500) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NOT NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_SourceProviders] PRIMARY KEY ([Id])
);
GO

CREATE TABLE [Files] (
    [Id] int NOT NULL IDENTITY,
    [FileName] nvarchar(500) NOT NULL,
    [Extension] nvarchar(100) NOT NULL,
    [MimeType] nvarchar(100) NOT NULL,
    [SizeBytes] bigint NOT NULL,
    [FolderId] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NOT NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_Files] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Files_Folders_FolderId] FOREIGN KEY ([FolderId]) REFERENCES [Folders] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [FolderProcessHistories] (
    [Id] int NOT NULL IDENTITY,
    [FolderId] int NOT NULL,
    [FolderProcessStateId] int NOT NULL,
    [IsActive] BIT NOT NULL DEFAULT CAST(1 AS BIT),
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NOT NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_FolderProcessHistories] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_FolderProcessHistories_FolderProcessStates_FolderProcessStateId] FOREIGN KEY ([FolderProcessStateId]) REFERENCES [FolderProcessStates] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_FolderProcessHistories_Folders_FolderId] FOREIGN KEY ([FolderId]) REFERENCES [Folders] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [RoleModules] (
    [RoleId] int NOT NULL,
    [ModuleId] int NOT NULL,
    [Id] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NOT NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_RoleModules] PRIMARY KEY ([RoleId], [ModuleId]),
    CONSTRAINT [FK_RoleModules_Modules_ModuleId] FOREIGN KEY ([ModuleId]) REFERENCES [Modules] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_RoleModules_Roles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [Roles] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [FileStorages] (
    [Id] int NOT NULL IDENTITY,
    [FileId] int NOT NULL,
    [StorageProviderId] int NOT NULL,
    [StorageIdentifier] nvarchar(200) NOT NULL,
    [StoragePath] nvarchar(500) NOT NULL,
    [UploadedAt] datetime2 NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NOT NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_FileStorages] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_FileStorages_Files_FileId] FOREIGN KEY ([FileId]) REFERENCES [Files] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_FileStorages_SourceProviders_StorageProviderId] FOREIGN KEY ([StorageProviderId]) REFERENCES [SourceProviders] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [FilePermissions] (
    [Id] int NOT NULL IDENTITY,
    [UserId] int NOT NULL,
    [FileId] int NOT NULL,
    [CanView] bit NOT NULL,
    [CanDownload] bit NOT NULL,
    [IsDateExpired] bit NOT NULL,
    [ExpirationDate] datetime2 NULL,
    [CreatedAt] datetime2 NULL,
    [CreatedBy] int NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_FilePermissions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_FilePermissions_Files_FileId] FOREIGN KEY ([FileId]) REFERENCES [Files] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [FolderPermissions] (
    [Id] int NOT NULL IDENTITY,
    [UserId] int NOT NULL,
    [FolderId] int NOT NULL,
    [CanView] bit NOT NULL,
    [IsDateExpired] bit NOT NULL,
    [CanDownload] bit NOT NULL,
    [ExpirationDate] datetime2 NULL,
    [CreatedAt] datetime2 NULL,
    [CreatedBy] int NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_FolderPermissions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_FolderPermissions_Folders_FolderId] FOREIGN KEY ([FolderId]) REFERENCES [Folders] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [Peoples] (
    [Id] int NOT NULL IDENTITY,
    [PersonType] nvarchar(1) NOT NULL,
    [FirstName] nvarchar(100) NULL,
    [LastName] nvarchar(100) NULL,
    [BussinessName] nvarchar(200) NULL,
    [Identification] nvarchar(200) NOT NULL,
    [Address] nvarchar(500) NOT NULL,
    [Phone] nvarchar(100) NOT NULL,
    [Email] nvarchar(100) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_Peoples] PRIMARY KEY ([Id]),
    CONSTRAINT [CK_People_PersonType] CHECK (PersonType IN ('N', 'J'))
);
GO

CREATE TABLE [Users] (
    [Id] int NOT NULL IDENTITY,
    [PeopleId] int NOT NULL,
    [PasswordHash] nvarchar(500) NOT NULL,
    [Status] BIT NOT NULL DEFAULT CAST(0 AS BIT),
    [IsExpired] BIT NOT NULL DEFAULT CAST(0 AS BIT),
    [HasChangedPassword] BIT NOT NULL DEFAULT CAST(0 AS BIT),
    [ExpirationDate] datetime2 NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Users_Peoples_PeopleId] FOREIGN KEY ([PeopleId]) REFERENCES [Peoples] ([Id]) ON DELETE NO ACTION
);
GO

CREATE TABLE [UserFolders] (
    [Id] int NOT NULL IDENTITY,
    [FolderId] int NOT NULL,
    [UserId] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NOT NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_UserFolders] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_UserFolders_Folders_FolderId] FOREIGN KEY ([FolderId]) REFERENCES [Folders] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_UserFolders_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
GO

CREATE TABLE [UserRoles] (
    [Id] int NOT NULL IDENTITY,
    [UserId] int NOT NULL,
    [RoleId] int NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [CreatedBy] int NOT NULL,
    [UpdatedAt] datetime2 NULL,
    [UpdatedBy] int NULL,
    [DeletedAt] datetime2 NULL,
    CONSTRAINT [PK_UserRoles] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_UserRoles_Roles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [Roles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_UserRoles_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE
);
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'Description', N'Name', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[FolderProcessStates]'))
    SET IDENTITY_INSERT [FolderProcessStates] ON;
INSERT INTO [FolderProcessStates] ([Id], [CreatedAt], [CreatedBy], [DeletedAt], [Description], [Name], [UpdatedAt], [UpdatedBy])
VALUES (1, '2025-04-13T19:26:15.6688030-05:00', 1, NULL, N'Pendiente', N'Pendiente', NULL, NULL),
(2, '2025-04-13T19:26:15.6688053-05:00', 1, NULL, N'En proceso', N'En proceso', NULL, NULL),
(3, '2025-04-13T19:26:15.6688055-05:00', 1, NULL, N'Atendido', N'Atendido', NULL, NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'Description', N'Name', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[FolderProcessStates]'))
    SET IDENTITY_INSERT [FolderProcessStates] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Address', N'BussinessName', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'Email', N'FirstName', N'Identification', N'LastName', N'PersonType', N'Phone', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Peoples]'))
    SET IDENTITY_INSERT [Peoples] ON;
INSERT INTO [Peoples] ([Id], [Address], [BussinessName], [CreatedAt], [CreatedBy], [DeletedAt], [Email], [FirstName], [Identification], [LastName], [PersonType], [Phone], [UpdatedAt], [UpdatedBy])
VALUES (1, N'123 Main St', NULL, '2025-04-13T19:26:15.6799745-05:00', NULL, NULL, N'ivansperezt@gmail.com', N'John', N'123456789', N'Doe', N'N', N'1234567890', NULL, NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Address', N'BussinessName', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'Email', N'FirstName', N'Identification', N'LastName', N'PersonType', N'Phone', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Peoples]'))
    SET IDENTITY_INSERT [Peoples] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'Description', N'RoleName', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Roles]'))
    SET IDENTITY_INSERT [Roles] ON;
INSERT INTO [Roles] ([Id], [CreatedAt], [CreatedBy], [DeletedAt], [Description], [RoleName], [UpdatedAt], [UpdatedBy])
VALUES (1, '2025-04-13T19:26:15.6817006-05:00', 1, NULL, N'Administrador', N'Admin', NULL, NULL),
(2, '2025-04-13T19:26:15.6817038-05:00', 1, NULL, N'Usuario', N'User', NULL, NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'Description', N'RoleName', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Roles]'))
    SET IDENTITY_INSERT [Roles] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'Description', N'ProviderName', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[SourceProviders]'))
    SET IDENTITY_INSERT [SourceProviders] ON;
INSERT INTO [SourceProviders] ([Id], [CreatedAt], [CreatedBy], [DeletedAt], [Description], [ProviderName], [UpdatedAt], [UpdatedBy])
VALUES (1, '2025-04-14T00:26:15.6839598Z', 1, NULL, N'Google Drive Provider', N'Google Drive', NULL, NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'Description', N'ProviderName', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[SourceProviders]'))
    SET IDENTITY_INSERT [SourceProviders] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'ExpirationDate', N'PasswordHash', N'PeopleId', N'Status', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] ON;
INSERT INTO [Users] ([Id], [CreatedAt], [CreatedBy], [DeletedAt], [ExpirationDate], [PasswordHash], [PeopleId], [Status], [UpdatedAt], [UpdatedBy])
VALUES (1, '2025-04-13T19:26:15.6846951-05:00', NULL, NULL, NULL, N'change password for password hash', 1, CAST(1 AS BIT), '2025-04-13T19:26:15.6846967-05:00', NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'ExpirationDate', N'PasswordHash', N'PeopleId', N'Status', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Users]'))
    SET IDENTITY_INSERT [Users] OFF;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'RoleId', N'UpdatedAt', N'UpdatedBy', N'UserId') AND [object_id] = OBJECT_ID(N'[UserRoles]'))
    SET IDENTITY_INSERT [UserRoles] ON;
INSERT INTO [UserRoles] ([Id], [CreatedAt], [CreatedBy], [DeletedAt], [RoleId], [UpdatedAt], [UpdatedBy], [UserId])
VALUES (1, '2025-04-13T19:26:15.6861081-05:00', 1, NULL, 1, NULL, NULL, 1);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'CreatedAt', N'CreatedBy', N'DeletedAt', N'RoleId', N'UpdatedAt', N'UpdatedBy', N'UserId') AND [object_id] = OBJECT_ID(N'[UserRoles]'))
    SET IDENTITY_INSERT [UserRoles] OFF;
GO

CREATE INDEX [IX_FilePermissions_FileId] ON [FilePermissions] ([FileId]);
GO

CREATE UNIQUE INDEX [IX_FilePermissions_UserId_FileId] ON [FilePermissions] ([UserId], [FileId]);
GO

CREATE INDEX [IX_Files_FolderId] ON [Files] ([FolderId]);
GO

CREATE UNIQUE INDEX [IX_FileStorages_FileId] ON [FileStorages] ([FileId]);
GO

CREATE INDEX [IX_FileStorages_StorageProviderId] ON [FileStorages] ([StorageProviderId]);
GO

CREATE INDEX [IX_FolderPermissions_FolderId] ON [FolderPermissions] ([FolderId]);
GO

CREATE INDEX [IX_FolderPermissions_UserId] ON [FolderPermissions] ([UserId]);
GO

CREATE INDEX [IX_FolderProcessHistories_FolderId] ON [FolderProcessHistories] ([FolderId]);
GO

CREATE INDEX [IX_FolderProcessHistories_FolderProcessStateId] ON [FolderProcessHistories] ([FolderProcessStateId]);
GO

CREATE INDEX [IX_Folders_ParentFolderId] ON [Folders] ([ParentFolderId]);
GO

CREATE UNIQUE INDEX [IX_Modules_Name] ON [Modules] ([Name]);
GO

CREATE INDEX [IX_Modules_ParentModuleId] ON [Modules] ([ParentModuleId]);
GO

CREATE INDEX [IX_Peoples_CreatedBy] ON [Peoples] ([CreatedBy]);
GO

CREATE UNIQUE INDEX [IX_Peoples_Email] ON [Peoples] ([Email]) WHERE DeletedAt IS NULL;
GO

CREATE UNIQUE INDEX [IX_Peoples_Identification] ON [Peoples] ([Identification]);
GO

CREATE INDEX [IX_Peoples_UpdatedBy] ON [Peoples] ([UpdatedBy]);
GO

CREATE INDEX [IX_RoleModules_ModuleId] ON [RoleModules] ([ModuleId]);
GO

CREATE UNIQUE INDEX [IX_Roles_RoleName] ON [Roles] ([RoleName]);
GO

CREATE UNIQUE INDEX [IX_SourceProviders_ProviderName] ON [SourceProviders] ([ProviderName]);
GO

CREATE INDEX [IX_UserFolders_FolderId] ON [UserFolders] ([FolderId]);
GO

CREATE INDEX [IX_UserFolders_UserId] ON [UserFolders] ([UserId]);
GO

CREATE INDEX [IX_UserRoles_RoleId] ON [UserRoles] ([RoleId]);
GO

CREATE UNIQUE INDEX [IX_UserRoles_UserId_RoleId] ON [UserRoles] ([UserId], [RoleId]);
GO

CREATE UNIQUE INDEX [IX_Users_PeopleId] ON [Users] ([PeopleId]);
GO

ALTER TABLE [FilePermissions] ADD CONSTRAINT [FK_FilePermissions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE;
GO

ALTER TABLE [FolderPermissions] ADD CONSTRAINT [FK_FolderPermissions_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE;
GO

ALTER TABLE [Peoples] ADD CONSTRAINT [FK_Peoples_Users_CreatedBy] FOREIGN KEY ([CreatedBy]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION;
GO

ALTER TABLE [Peoples] ADD CONSTRAINT [FK_Peoples_Users_UpdatedBy] FOREIGN KEY ([UpdatedBy]) REFERENCES [Users] ([Id]) ON DELETE NO ACTION;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250414002615_InitialCreate', N'7.0.20');
GO

COMMIT;
GO

